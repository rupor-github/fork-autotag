version: 2

project_name: autotag

env:
  - GO111MODULE=on
  - CGO_ENABLED=0
  - GOPROXY=https://proxy.golang.org
builds:
  - binary: autotag
    id: macos
    main: autotag/main.go
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}}+{{.ShortCommit}}
    goos:
      - darwin
    goarch:
      - amd64
      - arm64

  - binary: autotag
    id: linux
    main: autotag/main.go
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}}+{{.ShortCommit}}
    goos:
      - linux
    goarch:
      - amd64
      - arm64

  # duplicated builds for amd64 only. Needed by the legacy 'OSX' and 'Linux' binary release formats
  - binary: autotag
    id: macos-amd64-only
    main: autotag/main.go
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}}+{{.ShortCommit}}
    goos:
      - darwin
    goarch:
      - amd64

  - binary: autotag
    id: linux-amd64-only
    main: autotag/main.go
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}}+{{.ShortCommit}}
    goos:
      - linux
    goarch:
      - amd64

  # TODO: verify windows functionality then enable windows release binaries
  # - binary: autotag
  #   id: windows
  #   main: autotag/main.go
  #   ldflags:
  #     - -s -w -X main.version={{.Version}}+{{.ShortCommit}}
  #   goos:
  #     - windows
  #   goarch:
  #     - amd64

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^readme:"
      - "^test:"
      - Merge pull request
      - Merge branch

# GPG signing
# TODO: consider implementing a "project signing key"
# sign:
#   artifacts: checksum

archives:
  # Old release format for backwards compatibility with existing scripts:  Binary named 'Linux'
  - id: old-format-linux
    builds: ["linux-amd64-only"]
    format: binary
    name_template: "Linux"
  # Old release format for backwards compatibility with existing scripts:  Binary named 'OSX'
  - id: old-format-osx
    builds: ["macos-amd64-only"]
    format: binary
    name_template: "OSX"
  # New release format, binaries for all platforms in the form: `autotag_linux_amd64`
  - id: new-format-binary-only-all-platforms
    format: binary
    builds: ["linux", "macos"]
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"
  # archive releases containing: binary, readme, and license. tarballs (macos, linux), zip (windows)
  - id: archives
    builds: ["linux", "macos"]
    name_template: '{{ .ProjectName }}_{{ .Os }}_{{ if eq .Arch "386" }}i386{{ else }}{{ .Arch }}{{ end }}'
    format_overrides:
      - goos: windows
        format: zip

# TODO(joem): multi-arch docker image: https://goreleaser.com/cookbooks/multi-platform-docker-images/
# dockers:
#   - dockerfile: Dockerfile
#     image_templates:
#       - "ghcr.io/autotag-dev/autotag:{{ .Tag }}" # v1.0.0
#       - "ghcr.io/autotag-dev/autotag:v{{ .Major }}" # v1
#       - "ghcr.io/autotag-dev/autotag:v{{ .Major }}.{{ .Minor }}" # v1.0
#       - "ghcr.io/autotag-dev/autotag:latest"
